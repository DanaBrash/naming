locals {
  full_prefix  = "${var.projName}${local.loc_abbr}"
  short_prefix = "${substr(var.projName, 0, 6)}${local.loc_abbr}" # vm names <= 15char

  name = {
    "virtualmachine"         = "${substr("${local.short_prefix}vm${var.iterator}", 0, 15)}"
    "virtualmachinescaleset" = "${substr("${local.short_prefix}vmss${var.iterator}", 0, 15)}"
    "manageddisk(os)"        = "${substr("${local.short_prefix}osdisk${var.iterator}", 0, 15)}"
    "manageddisk(data)"      = "${substr("${local.short_prefix}disk${var.iterator}", 0, 15)}"
    "networkinterface(nic)"  = "${substr("${local.short_prefix}nic${var.iterator}", 0, 15)}"
    "vmstorageaccount"       = "${substr("${local.short_prefix}stvm${var.iterator}", 0, 15)}"


    # Remaining resources use full prefix
    "aisearch"                               = "${local.full_prefix}srch${var.iterator}"
    "azureaiservices"                        = "${local.full_prefix}ais${var.iterator}"
    "azureaifoundryhub"                      = "${local.full_prefix}hub${var.iterator}"
    "azureaifoundryproject"                  = "${local.full_prefix}proj${var.iterator}"
    "azureaivideoindexer"                    = "${local.full_prefix}avi${var.iterator}"
    "azuremachinelearningworkspace"          = "${local.full_prefix}mlw${var.iterator}"
    "azureopenaiservice"                     = "${local.full_prefix}oai${var.iterator}"
    "botservice"                             = "${local.full_prefix}bot${var.iterator}"
    "computervision"                         = "${local.full_prefix}cv${var.iterator}"
    "contentmoderator"                       = "${local.full_prefix}cm${var.iterator}"
    "contentsafety"                          = "${local.full_prefix}cs${var.iterator}"
    "customvision(prediction)"               = "${local.full_prefix}cstv${var.iterator}"
    "customvision(training)"                 = "${local.full_prefix}cstvt${var.iterator}"
    "documentintelligence"                   = "${local.full_prefix}di${var.iterator}"
    "faceapi"                                = "${local.full_prefix}face${var.iterator}"
    "healthinsights"                         = "${local.full_prefix}hi${var.iterator}"
    "immersivereader"                        = "${local.full_prefix}ir${var.iterator}"
    "languageservice"                        = "${local.full_prefix}lang${var.iterator}"
    "speechservice"                          = "${local.full_prefix}spch${var.iterator}"
    "translator"                             = "${local.full_prefix}trsl${var.iterator}"
    "azureanalysisservicesserver"            = "${local.full_prefix}as${var.iterator}"
    "azuredatabricksworkspace"               = "${local.full_prefix}dbw${var.iterator}"
    "azuredataexplorercluster"               = "${local.full_prefix}dec${var.iterator}"
    "azuredataexplorerclusterdatabase"       = "${local.full_prefix}dedb${var.iterator}"
    "azuredatafactory"                       = "${local.full_prefix}adf${var.iterator}"
    "azuredigitaltwininstance"               = "${local.full_prefix}dt${var.iterator}"
    "azurestreamanalytics"                   = "${local.full_prefix}asa${var.iterator}"
    "azuresynapseanalyticsprivatelinkhub"    = "${local.full_prefix}synplh${var.iterator}"
    "azuresynapseanalyticssqldedicatedpool"  = "${local.full_prefix}syndp${var.iterator}"
    "azuresynapseanalyticssparkpool"         = "${local.full_prefix}synsp${var.iterator}"
    "azuresynapseanalyticsworkspaces"        = "${local.full_prefix}synw${var.iterator}"
    "datalakestoreaccount"                   = "${local.full_prefix}dls${var.iterator}"
    "datalakeanalyticsaccount"               = "${local.full_prefix}dla${var.iterator}"
    "eventhubsnamespace"                     = "${local.full_prefix}evhns${var.iterator}"
    "eventhub"                               = "${local.full_prefix}evh${var.iterator}"
    "eventgriddomain"                        = "${local.full_prefix}evgd${var.iterator}"
    "eventgridsubscriptions"                 = "${local.full_prefix}evgs${var.iterator}"
    "eventgridtopic"                         = "${local.full_prefix}evgt${var.iterator}"
    "eventgridsystemtopic"                   = "${local.full_prefix}egst${var.iterator}"
    "hdinsight-hadoopcluster"                = "${local.full_prefix}hadoop${var.iterator}"
    "hdinsight-hbasecluster"                 = "${local.full_prefix}hbase${var.iterator}"
    "hdinsight-kafkacluster"                 = "${local.full_prefix}kafka${var.iterator}"
    "hdinsight-sparkcluster"                 = "${local.full_prefix}spark${var.iterator}"
    "hdinsight-stormcluster"                 = "${local.full_prefix}storm${var.iterator}"
    "hdinsight-mlservicescluster"            = "${local.full_prefix}mls${var.iterator}"
    "iothub"                                 = "${local.full_prefix}iot${var.iterator}"
    "provisioningservices"                   = "${local.full_prefix}provs${var.iterator}"
    "provisioningservicescertificate"        = "${local.full_prefix}pcert${var.iterator}"
    "powerbiembedded"                        = "${local.full_prefix}pbi${var.iterator}"
    "timeseriesinsightsenvironment"          = "${local.full_prefix}tsi${var.iterator}"
    "appserviceenvironment"                  = "${local.full_prefix}ase${var.iterator}"
    "appserviceplan"                         = "${local.full_prefix}asp${var.iterator}"
    "azureloadtestinginstance"               = "${local.full_prefix}lt${var.iterator}"
    "availabilityset"                        = "${local.full_prefix}avail${var.iterator}"
    "azurearcenabledserver"                  = "${local.full_prefix}arcs${var.iterator}"
    "azurearcenabledkubernetescluster"       = "${local.full_prefix}arck${var.iterator}"
    "azurearcprivatelinkscope"               = "${local.full_prefix}pls${var.iterator}"
    "azurearcgateway"                        = "${local.full_prefix}arcgw${var.iterator}"
    "batchaccounts"                          = "${local.full_prefix}ba${var.iterator}"
    "cloudservice"                           = "${local.full_prefix}cld${var.iterator}"
    "communicationservices"                  = "${local.full_prefix}acs${var.iterator}"
    "diskencryptionset"                      = "${local.full_prefix}des${var.iterator}"
    "functionapp"                            = "${local.full_prefix}func${var.iterator}"
    "gallery"                                = "${local.full_prefix}gal${var.iterator}"
    "hostingenvironment"                     = "${local.full_prefix}host${var.iterator}"
    "imagetemplate"                          = "${local.full_prefix}it${var.iterator}"
    "notificationhubs"                       = "${local.full_prefix}ntf${var.iterator}"
    "notificationhubsnamespace"              = "${local.full_prefix}ntfns${var.iterator}"
    "proximityplacementgroup"                = "${local.full_prefix}ppg${var.iterator}"
    "restorepointcollection"                 = "${local.full_prefix}rpc${var.iterator}"
    "snapshot"                               = "${local.full_prefix}snap${var.iterator}"
    "staticwebapp"                           = "${local.full_prefix}stapp${var.iterator}"
    "webapp"                                 = "${local.full_prefix}app${var.iterator}"
    "akscluster"                             = "${local.full_prefix}aks${var.iterator}"
    "akssystemnodepool"                      = "${local.full_prefix}npsystem${var.iterator}"
    "aksusernodepool"                        = "${local.full_prefix}np${var.iterator}"
    "containerapps"                          = "${local.full_prefix}ca${var.iterator}"
    "containerappsenvironment"               = "${local.full_prefix}cae${var.iterator}"
    "containerregistry"                      = "${local.full_prefix}cr${var.iterator}"
    "containerinstance"                      = "${local.full_prefix}ci${var.iterator}"
    "servicefabriccluster"                   = "${local.full_prefix}sf${var.iterator}"
    "servicefabricmanagedcluster"            = "${local.full_prefix}sfmc${var.iterator}"
    "azurecosmosdbdatabase"                  = "${local.full_prefix}cosmos${var.iterator}"
    "azurecosmosdbforapachecassandraaccount" = "${local.full_prefix}coscas${var.iterator}"
    "azurecosmosdbformongodbaccount"         = "${local.full_prefix}cosmon${var.iterator}"
    "azurecosmosdbfornosqlaccount"           = "${local.full_prefix}cosno${var.iterator}"
    "azurecosmosdbfortableaccount"           = "${local.full_prefix}costab${var.iterator}"
    "azurecosmosdbforapachegremlinaccount"   = "${local.full_prefix}cosgrm${var.iterator}"
    "azurecosmosdbpostgresqlcluster"         = "${local.full_prefix}cospos${var.iterator}"
    "azurecacheforredisinstance"             = "${local.full_prefix}redis${var.iterator}"
    "azuresqldatabaseserver"                 = "${local.full_prefix}sql${var.iterator}"
    "azuresqldatabase"                       = "${local.full_prefix}sqldb${var.iterator}"
    "azuresqlelasticjobagent"                = "${local.full_prefix}sqlja${var.iterator}"
    "azuresqlelasticpool"                    = "${local.full_prefix}sqlep${var.iterator}"
    "mariadbserver"                          = "${local.full_prefix}maria${var.iterator}"
    "mariadbdatabase"                        = "${local.full_prefix}mariadb${var.iterator}"
    "mysqldatabase"                          = "${local.full_prefix}mysql${var.iterator}"
    "postgresqlatabase"                      = "${local.full_prefix}psql${var.iterator}"
    "sqlserverstretchdatabase"               = "${local.full_prefix}sqlstrdb${var.iterator}"
    "sqlmanagedinstance"                     = "${local.full_prefix}sqlmi${var.iterator}"
    "appconfigurationstore"                  = "${local.full_prefix}appcs${var.iterator}"
    "mapsaccount"                            = "${local.full_prefix}map${var.iterator}"
    "signalr"                                = "${local.full_prefix}sigr${var.iterator}"
    "webpubsub"                              = "${local.full_prefix}wps${var.iterator}"
    "azuremanagedgrafana"                    = "${local.full_prefix}amg${var.iterator}"
    "apimanagementserviceinstance"           = "${local.full_prefix}apim${var.iterator}"
    "integrationaccount"                     = "${local.full_prefix}ia${var.iterator}"
    "logicapp"                               = "${local.full_prefix}logic${var.iterator}"
    "servicebusnamespace"                    = "${local.full_prefix}sbns${var.iterator}"
    "servicebusqueue"                        = "${local.full_prefix}sbq${var.iterator}"
    "servicebustopic"                        = "${local.full_prefix}sbt${var.iterator}"
    "servicebustopicsubscription"            = "${local.full_prefix}sbts${var.iterator}"
    "automationaccount"                      = "${local.full_prefix}aa${var.iterator}"
    "azurepolicydefinition"                  = "${local.full_prefix}poldef${var.iterator}"
    "applicationinsights"                    = "${local.full_prefix}appi${var.iterator}"
    "azuremonitoractiongroup"                = "${local.full_prefix}ag${var.iterator}"
    "azuremonitordatacollectionrule"         = "${local.full_prefix}dcr${var.iterator}"
    "azuremonitoralertprocessingrule"        = "${local.full_prefix}apr${var.iterator}"
    "blueprint"                              = "${local.full_prefix}bp${var.iterator}"
    "blueprintassignment"                    = "${local.full_prefix}bpa${var.iterator}"
    "datacollectionendpoint"                 = "${local.full_prefix}dce${var.iterator}"
    "loganalyticsworkspace"                  = "${local.full_prefix}log${var.iterator}"
    "loganalyticsquerypacks"                 = "${local.full_prefix}pack${var.iterator}"
    "managementgroup"                        = "${local.full_prefix}mg${var.iterator}"
    "microsoftpurviewinstance"               = "${local.full_prefix}pview${var.iterator}"
    "resourcegroup"                          = "${local.full_prefix}rg${var.iterator}"
    "templatespecsname"                      = "${local.full_prefix}ts${var.iterator}"
    "azuremigrateproject"                    = "${local.full_prefix}migr${var.iterator}"
    "databasemigrationserviceinstance"       = "${local.full_prefix}dms${var.iterator}"
    "recoveryservicesvault"                  = "${local.full_prefix}rsv${var.iterator}"
  }
}
